{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","goods","goodsFromServer","clear","setState","this","length","lastIndex","firstPart","slice","joined","join","goodName","includes","good","newGoods","filter","el","isSelected","unselectGood","selectGood","className","getTitle","type","onClick","map","cn","selectToggle","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCCWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,OAChBC,MAAOC,GAHX,EAwBEC,MAAQ,WACN,EAAKC,SAAS,CACZJ,cAAe,MA1BrB,8CAME,WACE,IAAQA,EAAkBK,KAAKN,MAAvBC,cAER,IAAKA,EAAcM,OACjB,MAAO,oBAGT,GAA6B,IAAzBN,EAAcM,OAChB,MAAM,GAAN,OAAUN,EAAV,gBAGF,IAAMO,EAAYP,EAAcM,OAAS,EACnCE,EAAYR,EAAcS,MAAM,GAAI,GACpCC,EAAM,UAAMF,EAAUG,KAAK,MAArB,gBAAkCX,EAAcO,IAE5D,MAAM,GAAN,OAAUG,EAAV,mBArBJ,wBA8BE,SAAWE,GAGT,OAF0BP,KAAKN,MAAvBC,cAEaa,SAASD,KAjClC,wBAoCE,SAAWE,GACT,IAAQd,EAAkBK,KAAKN,MAAvBC,cAERK,KAAKD,SAAS,CAAEJ,cAAc,GAAD,mBAAMA,GAAN,CAAqBc,QAvCtD,0BA0CE,SAAaA,GACX,IAEMC,EAFoBV,KAAKN,MAAvBC,cAEuBgB,QAAO,SAAAC,GAAE,OAAIA,IAAOH,KAEnDT,KAAKD,SAAS,CAAEJ,cAAee,MA/CnC,0BAkDE,SAAaH,GACPP,KAAKa,WAAWN,GAClBP,KAAKc,aAAaP,GAKpBP,KAAKe,WAAWR,KAzDpB,oBA4DE,WAA2B,IAAD,OAChBX,EAAUI,KAAKN,MAAfE,MAER,OACE,uBAAMoB,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGhB,KAAKiB,aAGR,wBACEC,KAAK,SACLF,UAAU,aACVG,QAASnB,KAAKF,MAHhB,sBASF,6BACGF,EAAMwB,KAAI,SAAAX,GACT,IAAMI,EAAa,EAAKA,WAAWJ,GAEnC,OACE,6BACE,gCACGA,EACD,wBACES,KAAK,SACLF,UAAWK,IACT,aACA,CACE,gBAAiBR,EACjB,aAAcA,IAGlBM,QAAS,kBAAM,EAAKG,aAAab,IATnC,SAWII,EACE,SACA,eAhBDJ,eApFvB,GAAyBc,IAAMC,WCR/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecf761b2.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ninterface State {\n  selectedGoods: string[],\n  goods: string[],\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    goods: goodsFromServer,\n  };\n\n  getTitle() {\n    const { selectedGoods } = this.state;\n\n    if (!selectedGoods.length) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods} is selected`;\n    }\n\n    const lastIndex = selectedGoods.length - 1;\n    const firstPart = selectedGoods.slice(0, -1);\n    const joined = `${firstPart.join(', ')} and ${selectedGoods[lastIndex]}`;\n\n    return `${joined} are selected`;\n  }\n\n  clear = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  isSelected(goodName: string) {\n    const { selectedGoods } = this.state;\n\n    return selectedGoods.includes(goodName);\n  }\n\n  selectGood(good: string) {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  }\n\n  unselectGood(good: string) {\n    const { selectedGoods } = this.state;\n\n    const newGoods = selectedGoods.filter(el => el !== good);\n\n    this.setState({ selectedGoods: newGoods });\n  }\n\n  selectToggle(goodName: string) {\n    if (this.isSelected(goodName)) {\n      this.unselectGood(goodName);\n\n      return;\n    }\n\n    this.selectGood(goodName);\n  }\n\n  render(): React.ReactNode {\n    const { goods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.getTitle()}\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"App__clear\"\n            onClick={this.clear}\n          >\n            Clear\n          </button>\n        </header>\n\n        <ul>\n          {goods.map(good => {\n            const isSelected = this.isSelected(good);\n\n            return (\n              <li key={good}>\n                <div>\n                  {good}\n                  <button\n                    type=\"button\"\n                    className={cn(\n                      'controlBtn',\n                      {\n                        'btn--success': !isSelected,\n                        'btn--error': isSelected,\n                      },\n                    )}\n                    onClick={() => this.selectToggle(good)}\n                  >\n                    {(isSelected\n                      ? 'Remove'\n                      : 'Select'\n                    )}\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}